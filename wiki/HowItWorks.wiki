#summary Описание работы ModularGrid'а

= Инициализация =

Сначала вызвается ModularGrid.init(settings), settings — объект с параметрами сетки.

ModularGrid.init добавляет обработчики событий:
 * нажатия клавиш (для показа/сокрытия сетки)
 * изменения размера окна браузера (для увеличения размера сетки по высоте)

Если cookie с именем ModularGrid.cookieName установлено, то сетка показывается.

= Сокрытие/показ сетки =
Сокрытие/показ сетки происходит при нажатии клавиш в случае, если функция ModularGrid.shouldTriggerKeyDown возвращает true.

При показе сетки значение cookie с именем ModularGrid.cookieName устанавливается в 1, при сокрытии сетки cookie с именем ModularGrid.cookieName удаляется.

При первом показе сетки, она создаётся из DOM-элементов. Для сокрытия и повторного показа скрывается и показывается корневой элемент сетки.

== Создание сетки (из DOM-элементов) ==
На нижнем слое сетки лежат элементы для создания горизонтальной сетки (строки), на верхнем слое — элементы для создания вертикальной сетки (колонки).

=== Создание горизонтальной сетки (строки) ===
Нижний слой состоит из горизонтальных модулей, верхний слой — из элементов шрифтовой сетки.

=== Создание вертикальной сетки (колонки) ===
Сетка рисуется в рабочей области, ширина которой регулируется с помощью ModularGrid.width (например «600» или «70%»).

*Фиксированная ширина*

Если ModularGrid.width — число, то это ширина рабочей области задаётся в пикселах.

Если ModularGrid.centered == true, то рабочая область центрируется.

Если ModularGrid.centered == false, то рабочая область прижимается к левому краю окна. Отступ от левого края окна регулируется с помощью ModularGrid.marginLeft (например «60» или «10%»)

*Нефиксированная ширина*

Если ModularGrid.width — строка с последним символом «%», то это ширина рабочей области в процентах. В этом случае необходимо также задать ModularGrid.minWidth (минимальная ширина в пикселах) и ModularGrid.maxWidth (опционально).

Если ModularGrid.centered == true, то рабочая область центрируется.

Если ModularGrid.centered == false, то рабочая область прижимается к левому краю окна. Отступ от левого края окна регулируется с помощью ModularGrid.marginLeft (например «60» или «10%»), от правого края окна — параметром ModularGrid.marginRight (например «60» или «10%»).

*Вертикальные модули (колонки)*

Создаётся ModularGrid.vDivisions полупрозрачных DOM-элементов с фоном. Ширина элемента задаётся в процентах. Алгоритм расчёта ширины:
 # Ширина рабочей области — ModularGrid.width (при задании в пикселах) или ModularGrid.minWidth (при задании ModularGrid.width в процентах)
 # Количество «канавок» (gutter) = ModularGrid.vDivisions - 1. Если ModularGrid.prependGutter == true, то количество канавок = количество канавок + 1. Если ModularGrid.appendGutter == true, то количество канавок = количество канавок + 1.
 # Вычисляется ширина канавки в процентах относительно ширины рабочей области.
 # Вычисляется ширина колонки: (100% - сумма процентов ширины канавок) / ModularGrid.vDivisions
 # Если ModularGrid.prependGutter == true, то начальная координата для колонки = ширина канавки в процентах
 # ModularGrid.vDivisions раз добавляем DOM-элемент колонки, увеличивая начальную координату колонки на ширину колонки + ширина канавки.

= Увеличение размера сетки по высоте =